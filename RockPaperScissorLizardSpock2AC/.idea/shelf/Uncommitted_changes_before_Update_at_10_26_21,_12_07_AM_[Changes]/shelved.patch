Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision b28432e8eba649410bd49e4f56042f12ebe6ef71)
+++ /dev/null	(revision b28432e8eba649410bd49e4f56042f12ebe6ef71)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Datasource local storage ignored files
-/dataSources/
-/dataSources.local.xml
-# Editor-based HTTP Client requests
-/httpRequests/
Index: src/com/itse/alfredocastillo/RockPaperScissorLizardSpock2AC.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.itse.alfredocastillo;\n\npublic class RockPaperScissorLizardSpock2AC {\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/itse/alfredocastillo/RockPaperScissorLizardSpock2AC.java b/src/com/itse/alfredocastillo/RockPaperScissorLizardSpock2AC.java
--- a/src/com/itse/alfredocastillo/RockPaperScissorLizardSpock2AC.java	(revision b28432e8eba649410bd49e4f56042f12ebe6ef71)
+++ b/src/com/itse/alfredocastillo/RockPaperScissorLizardSpock2AC.java	(date 1635224785426)
@@ -1,4 +1,148 @@
 package com.itse.alfredocastillo;
 
+import java.util.Random;
+import java.util.Scanner;
+
+/// Programmer: Alfredo Castillo
+/// Date: 10/25/2021
+/// Description: This is version 2 of the original Rock Paper Scissor Lizard Spock Game.
+/// Code was modified to be more elegant and concisely play the game.
+
+
 public class RockPaperScissorLizardSpock2AC {
+    static int user;
+    public static void main(String args[]){
+        // display game title
+        System.out.println("Scissor Rock Paper Lizard Spock Game Version 2.0");
+
+        // start game on loop until user exits by choice or an invalid character is entered
+        while(true){
+            // take user input
+            Scanner userInput = new Scanner((System.in));
+            System.out.println("Enter a number from 0 to 4:");
+            System.out.println("(0 for Scissor , 1 for Rock , 2 for Paper , 3 for Lizard , 4 for Spock)");
+
+            // check if user input is of type int
+            if(userInput.hasNextInt()) {
+                user = userInput.nextInt();
+            }
+            else
+            {
+                System.out.println("Please enter a valid character");
+                userInput.close();
+                break;
+            }
+
+            // create an instance of Random class
+            Random rand = new Random();
+            // generate random int in range 0 to 5
+            int comGuess = rand.nextInt(5);
+
+            // exit loop if user enters 5
+            if (user == 5){
+                System.out.println("Exiting game");
+                break;
+            }
+
+            // loop game until user/player exits game by choice
+            while(true){
+                if (user > 5 ){
+                    System.out.println("Make a selection from 0 to 4. 5 to exit the game.");
+                    break;
+                }
+
+                // get assign name for int. ex 0 = scissors, 1 = rock
+                String userInputName = numberLabel(user);
+                String computerGuessName = numberLabel(comGuess);
+
+                // display the user input
+                System.out.println("----------------------------------");
+                System.out.println("Player Chooses: " + user + " - "+ userInputName);
+                System.out.println("Computer Chooses: " + comGuess + " - " + computerGuessName);
+
+                // determine if a win, loss, or tie. method take in user input and computer guess.
+                runGame(user, comGuess);
+                System.out.println("----------------------------------");
+
+                //break loop to go back up to the choice menu
+                break;
+            }
+        }
+    }
+
+    /// return the assign name for a given number in range 0 to 5
+    static String numberLabel(int x){
+        switch (x){
+            case 0:
+                return "Scissor";
+            case 1:
+                return "Rock";
+            case 2:
+                return "Paper";
+            case 3:
+                return "Lizard";
+            case 4:
+                return "Spock";
+            default:
+                return "Invalid";
+        }
+    }
+
+    /// method takes in the user input and computer input to check for a win, loss, or tie
+    static void runGame(int userInput, int comInput){
+        // switch on user input
+        switch (userInput){
+            case 0:
+                if (comInput == 2 || comInput == 3){
+                    System.out.println("You win!");
+                }else if (comInput == userInput){
+                    System.out.println("It's a Tie!");
+                }else{
+                    System.out.println("You loose!");
+                }
+                break;
+            case 1:
+                if (comInput == 0 || comInput == 3){
+                    System.out.println("You win!");
+                }else if (comInput == userInput){
+                    System.out.println("It's a Tie!");
+                }else{
+                    System.out.println("You loose!");
+                }
+                break;
+            case 2:
+                if (comInput == 1 || comInput == 4){
+                    System.out.println("You win!");
+                }else if (comInput == userInput){
+                    System.out.println("It's a Tie!");
+                }
+                else{
+                    System.out.println("You loose!");
+                }
+                break;
+            case 3:
+                if (comInput != 2 || comInput != 4){
+                    System.out.println("You win!");
+                }else if (comInput == userInput){
+                    System.out.println("It's a Tie!");
+                }
+                else{
+                    System.out.println("You loose!");
+                }
+                break;
+            case 4:
+                if (comInput != 0 || comInput != 4){
+                    System.out.println("You win!");
+                }else if (comInput == userInput){
+                    System.out.println("It's a Tie!");
+                }
+                else{
+                    System.out.println("You loose!");
+                }
+                break;
+            default:
+                System.out.println("Invalid!");
+                break;
+        }
+    }
 }
